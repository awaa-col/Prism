# A generic, single-database configuration.

[alembic]
# path to migration scripts
script_location = alembic

# template for migration file names, e.g. "alembic/versions/932468754181_add_a_column.py"
file_template = %%(rev)s_%%(slug)s

# sys.path path, will be prepended to sys.path if present.
# defaults to the current working directory.
# prepend_sys_path = .

# timezone in which to display the date/time of migration file creation, e.g. "UTC"
# timezone =

# title used to describe this project in the context of the database migration tool
# project_title =

# max length of characters to apply to the identifying portion of a migration file name
# truncate_rev_id = 10

# set to 'true' to run the environment script from the migrations
# directory, rather than the project's current directory.
# relative_paths = false

# the output encoding used when writing migration files
# output_encoding = utf-8

sqlalchemy.url = sqlite+aiosqlite:///./ai_gateway.db


[post_write_hooks]
# post_write_hooks defines scripts or Python functions that are run
# on newly generated revision files.  See the documentation for further
# detail and examples.
#
# hooks =
# hook.black.type = exec
# hook.black.entrypoint = black
# hook.black.options = -l 79 %%(dot)s

# logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S




version: '3.8'

services:
  # AI Gateway主服务
  ai-gateway:
    build: .
    container_name: ai-gateway
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql+asyncpg://gateway_user:gateway_pass@postgres:5432/ai_gateway
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=production-secret-key-change-this
      - LOG_LEVEL=info
      - ENABLE_TELEMETRY=false
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
      - ./config.yml:/app/config.yml
    restart: unless-stopped
    networks:
      - ai-gateway-network

  # PostgreSQL数据库
  postgres:
    image: postgres:15-alpine
    container_name: ai-gateway-postgres
    environment:
      - POSTGRES_DB=ai_gateway
      - POSTGRES_USER=gateway_user
      - POSTGRES_PASSWORD=gateway_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - ai-gateway-network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: ai-gateway-redis
    command: redis-server --appendonly yes --requirepass redis_password
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - ai-gateway-network

  # Nginx反向代理 (可选)
  nginx:
    image: nginx:alpine
    container_name: ai-gateway-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - ai-gateway
    restart: unless-stopped
    networks:
      - ai-gateway-network

  # 监控服务 (可选)
  prometheus:
    image: prom/prometheus:latest
    container_name: ai-gateway-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - ai-gateway-network

  # Grafana仪表板 (可选)
  grafana:
    image: grafana/grafana:latest
    container_name: ai-gateway-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - ai-gateway-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  ai-gateway-network:
    driver: bridge 